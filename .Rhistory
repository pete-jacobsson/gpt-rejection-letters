import openai
import os
import time
##COMMENT UP THIS CODE!!!
with open('/home/pete/Documents/gpt_key.txt') as t:
openai.api_key = t.readlines()[0].strip("\n")
def get_completion(prompt, model="gpt-3.5-turbo", temperature = 0):
messages = [{"role": "user", "content": prompt}]
response = openai.ChatCompletion.create(
model=model,
messages=messages,
temperature=temperature, # this is the degree of randomness of the model's output
)
return response.choices[0].message["content"]
def print_rejection_letter(input_job, input_cv, temperature = 0.5):
prompt = """Please compare the CV to the Job Description. Return the list of skills required in the Job description and state whether the     CV matches them (as yes or no). Make sure that the match is literal - for example if the job description specifies 'Agile', do not pass       'Scrum@ as matching. Only provide the list once. Wrtie the reply in a friendly, supportive tone, addressing the CV sender as to why they       did not receive the interview they applied for and suggest improvements for the future. Sign your reply as 'George, Automated HR              assistant'. CV:[""" + input_job + """] Job description: [""" + input_cv + """]"""
cv_match = get_completion(prompt, temperature  = temperature)
return cv_match
rejection_letter = print_rejection_letter(input_job = sample_job, input_cv = sample_cv)
print(rejection_letter)
with open ("sample_job.txt") as f:
sample_job = f.readlines()
sample_job =' '.join(sample_job)
print(sample_job)
with open ("sample_cv.txt") as f:
sample_cv = f.readlines()
sample_cv =' '.join(sample_cv)
print(sample_cv)
rejection_letter = print_rejection_letter(input_job = sample_job, input_cv = sample_cv)
print(rejection_letter)
